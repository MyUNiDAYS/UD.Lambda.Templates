version: 2.1

jobs:
  pack-and-publish-nuget:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:3.1
    parameters:
      template-path:
        description: Path of the template Project that needs building
        type: string    
      nuget-output-path:
        description: Output location of Nuget NUPKG
        type: string
        default: nupk_output
      pre-release:
        description: Is Pre-release?
        type: boolean
        default: true
    steps:
      - run:
          if [ -z "$CIRCLE_TAG" ]
            then
              echo "No Git tag present, will do nothing"
            else
              VERSION="${CIRCLE_TAG//v/}"
              dotnet pack -c Release --no-build -p:PackageVersion=$VERSION<<#parameters.pre-release>>-beta<</parameters.pre-release>> -o $HOME/<<parameters.nuget-output-path>> <<parameters.template-path>> 
              for f in $HOME/<<parameters.nuget-output-path>>/*.nupkg; do dotnet nuget push $f -s https://www.myget.org/F/unidays-release/api/v2/package -k $NUGET_APIKEY; done
            fi

  build-templates:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:3.1
    parameters:
      template-path:
        description: Path of Project/Solution that houses the templates
        type: string
      workspace_root:
        type: string
        default: .
    steps:
      - checkout
      - run:
          name: Create Environment
          command: |
            cd << parameters.workspace_root >> 
            dotnet tool install --tool-path . trx2junit
      - run:
          name: Build and test
          working_directory: << parameters.workspace_root >>
          command: |            
            dotnet test -c Release -l trx -r ./artifacts
            dotnet publish UD.Lambda.Templates.csproj -c Release -o ./publish
      - persist_to_workspace:
          root: << parameters.workspace_root >> 
          paths:
            - UD.Lambda.Templates.csproj
            - publish
      - run:
          name: Convert test results
          working_directory: << parameters.workspace_root >>
          command: ./trx2junit ./artifacts/*.trx
          when: always
      - store_test_results:
          path: << parameters.workspace_root >>/artifacts/  

workflows:
  version: 2.1
  build-templates-prerelease:
    jobs:
      - build-templates:
          template-path: UD.Lambda.Templates.csproj
          filters: 
              branches:
                ignore: master
      - pack-and-publish-nuget:
          template-path: UD.Lambda.Templates.csproj
          pre-release: true
          requires:
            - build-templates

  build-templates-release:
    jobs:
      - build-templates:
          template-path: UD.Lambda.Templates.csproj
          filters: 
              branches:
                only: master
      - pack-and-publish-nuget:
          template-path: UD.Lambda.Templates.csproj
          pre-release: false
          requires:
            - build-templates
